/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void mass_change(GSlider source, GEvent event) { //_CODE_:sliderMass:619737:
  println("sliderMass - GSlider >> GEvent." + event + " @ " + millis());
  float newMass = source.getValueF();

  
} //_CODE_:sliderMass:619737:

public void restDensity_change(GSlider source, GEvent event) { //_CODE_:sliderRestDensity:745241:
  println("sliderRestDensity - GSlider >> GEvent." + event + " @ " + millis());
    float newRestDensity = source.getValueF();
} //_CODE_:sliderRestDensity:745241:

public void fluidViscosity_change(GSlider source, GEvent event) { //_CODE_:sliderFluidViscosity:680732:
  println("sliderFluidViscosity - GSlider >> GEvent." + event + " @ " + millis());
    float newFluidViscosity = source.getValueF();  
} //_CODE_:sliderFluidViscosity:680732:

public void update_click(GButton source, GEvent event) { //_CODE_:btnUpdate:391167:
  println("btnUpdate - GButton >> GEvent." + event + " @ " + millis());
  int newParticlesNum = Integer.parseInt(txtParticlesNum.getText());
  water.setParticlesNumber(newParticlesNum);
  float newStepTime = Integer.parseInt(txtStepTime.getText());
  float newMass = sliderMass.getValueF();
  float newRestDensity = sliderRestDensity.getValueF();
  float newFluidViscosity = sliderFluidViscosity.getValueF();  
   
} //_CODE_:btnUpdate:391167:

public void txtParticlesNum_change(GTextField source, GEvent event) { //_CODE_:txtParticlesNum:283906:
  println("txtParticlesNum - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:txtParticlesNum:283906:

public void txtStepTime_change(GTextField source, GEvent event) { //_CODE_:txtStepTime:694139:
  println("textTimeStep - GTextField >> GEvent." + event + " @ " + millis());
  //float newTimeStep = source.getValueF();
} //_CODE_:txtStepTime:694139:

public void sliderH_change(GSlider source, GEvent event) { //_CODE_:sliderH:211409:
  println("sliderH - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:sliderH:211409:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Controller Window");
  lblHeader = new GLabel(this, 41, 46, 396, 42);
  lblHeader.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lblHeader.setText("SPH Fluid Simulation");
  lblHeader.setOpaque(false);
  lblMass = new GLabel(this, 363, 216, 80, 20);
  lblMass.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lblMass.setText("Mass(gr.)");
  lblMass.setOpaque(false);
  lblRestDensity = new GLabel(this, 337, 451, 141, 34);
  lblRestDensity.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lblRestDensity.setText("Rest Density");
  lblRestDensity.setOpaque(false);
  lblFluidViscosity = new GLabel(this, 57, 356, 80, 20);
  lblFluidViscosity.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lblFluidViscosity.setText("Âµ");
  lblFluidViscosity.setOpaque(false);
  sliderMass = new GSlider(this, 350, 246, 100, 53, 10.0);
  sliderMass.setShowValue(true);
  sliderMass.setShowLimits(true);
  sliderMass.setLimits(0.5, 0.2, 1.0);
  sliderMass.setShowTicks(true);
  sliderMass.setNumberFormat(G4P.DECIMAL, 2);
  sliderMass.setLocalColorScheme(GCScheme.RED_SCHEME);
  sliderMass.setOpaque(false);
  sliderMass.addEventHandler(this, "mass_change");
  sliderRestDensity = new GSlider(this, 357, 505, 100, 53, 10.0);
  sliderRestDensity.setShowValue(true);
  sliderRestDensity.setShowLimits(true);
  sliderRestDensity.setLimits(0.5, 0.1, 1.0);
  sliderRestDensity.setShowTicks(true);
  sliderRestDensity.setNumberFormat(G4P.DECIMAL, 2);
  sliderRestDensity.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  sliderRestDensity.setOpaque(false);
  sliderRestDensity.addEventHandler(this, "restDensity_change");
  sliderFluidViscosity = new GSlider(this, 47, 391, 100, 51, 10.0);
  sliderFluidViscosity.setShowValue(true);
  sliderFluidViscosity.setShowLimits(true);
  sliderFluidViscosity.setLimits(0.5, 0.1, 1.5);
  sliderFluidViscosity.setShowTicks(true);
  sliderFluidViscosity.setNumberFormat(G4P.DECIMAL, 2);
  sliderFluidViscosity.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  sliderFluidViscosity.setOpaque(false);
  sliderFluidViscosity.addEventHandler(this, "fluidViscosity_change");
  lblParticleOptions = new GLabel(this, 301, 111, 194, 75);
  lblParticleOptions.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lblParticleOptions.setText("Particle Options");
  lblParticleOptions.setOpaque(false);
  lblFluidOptions = new GLabel(this, 9, 119, 206, 69);
  lblFluidOptions.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lblFluidOptions.setText("Fluid Options");
  lblFluidOptions.setOpaque(false);
  btnUpdate = new GButton(this, 192, 837, 80, 35);
  btnUpdate.setText("Update");
  btnUpdate.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  btnUpdate.addEventHandler(this, "update_click");
  txtParticlesNum = new GTextField(this, 48, 219, 120, 30, G4P.SCROLLBARS_NONE);
  txtParticlesNum.setPromptText("Number of Particles");
  txtParticlesNum.setOpaque(false);
  txtParticlesNum.addEventHandler(this, "txtParticlesNum_change");
  txtStepTime = new GTextField(this, 47, 270, 120, 30, G4P.SCROLLBARS_NONE);
  txtStepTime.setPromptText("Time Step");
  txtStepTime.setOpaque(true);
  txtStepTime.addEventHandler(this, "txtStepTime_change");
  lblH = new GLabel(this, 355, 321, 80, 20);
  lblH.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  lblH.setText("h");
  lblH.setOpaque(false);
  sliderH = new GSlider(this, 353, 353, 100, 57, 10.0);
  sliderH.setShowValue(true);
  sliderH.setShowLimits(true);
  sliderH.setLimits(0.5, 0.1, 1.0);
  sliderH.setShowTicks(true);
  sliderH.setNumberFormat(G4P.DECIMAL, 2);
  sliderH.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  sliderH.setOpaque(false);
  sliderH.addEventHandler(this, "sliderH_change");
}

// Variable declarations 
// autogenerated do not edit
GLabel lblHeader; 
GLabel lblMass; 
GLabel lblRestDensity; 
GLabel lblFluidViscosity; 
GSlider sliderMass; 
GSlider sliderRestDensity; 
GSlider sliderFluidViscosity; 
GLabel lblParticleOptions; 
GLabel lblFluidOptions; 
GButton btnUpdate; 
GTextField txtParticlesNum; 
GTextField txtStepTime; 
GLabel lblH; 
GSlider sliderH; 
